apply plugin: 'com.android.application'

apply plugin: 'com.neenbedankt.android-apt'

android {

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def code = versionProps['VERSION_CODE'].toInteger() + 1
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        compileSdkVersion 24
        buildToolsVersion "24.0.0"
        defaultConfig {
            applicationId "me.chkfung.meizhigankio"
            minSdkVersion 16
            targetSdkVersion 24
            versionCode code
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            vectorDrawables.setUseSupportLibrary(true)
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }

        production {

        }


    }
}

dependencies {
    Map<String, String> dependencies = rootProject.ext.dependencies;

    //Leak Canary
    debugCompile dependencies.debug_LeakCanary
    releaseCompile dependencies.test_LeakCanary
    testCompile dependencies.test_LeakCanary

    //SupportLibrary
    compile dependencies.appCompat
    compile dependencies.cardView
    compile dependencies.design
    compile dependencies.recyclerView
    compile dependencies.customTabs
    compile dependencies.constraintLayout
    androidTestCompile dependencies.atc_annotation

    //Utils
    compile dependencies.butterKnife
    apt dependencies.apt_ButterKnife
    compile dependencies.rxAndroid
    compile dependencies.dagger
    apt dependencies.apt_Dagger
    provided dependencies.provided_annotation

    //Network And Provider
    compile dependencies.retrofit
    compile dependencies.retrofitConverterGson
    compile dependencies.retrofitAdapterRxJava
    compile dependencies.gson
    compile dependencies.logger

    //UI Library
//    compile dependencies.circleImageView

    //Testing
    testCompile dependencies.tc_jUnit
    androidTestCompile dependencies.atc_espresso
    androidTestCompile dependencies.atc_runner
    compile 'com.google.firebase:firebase-core:9.0.2'
    compile 'com.google.firebase:firebase-crash:9.0.2'
    compile 'com.google.firebase:firebase-messaging:9.0.2'


    compile dependencies.glide
    compile "com.google.android.gms:play-services-location:9.0.2"
    compile 'com.github.chrisbanes:PhotoView:1.2.6'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'

}

/*
 * Meizhi & Gank.io
 * Copyright (C) 2016 ChkFung
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.frogermcs.androiddevmetrics'
